@import '~@fluentui/react/dist/sass/References.scss';

.chatbotContainer {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 9999;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.floatingButton {
  width: 90px;
  height: 90px;
  background: transparent;
  border: none;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  
  // Initial magical appearance with floating effect
  animation: 
    magicalAppearance 1.8s cubic-bezier(0.4, 0, 0.2, 1) 0.3s both,
    floatingEffect 3s ease-in-out 2s infinite;

  &:hover {
    transform: translateY(-6px) scale(1.1);
    animation-play-state: paused;
    
    .sparklesOverlay {
      animation-play-state: running;
      
      .sparkle {
        animation-play-state: running;
      }
    }
    
    .magicSmoke {
      .smoke {
        animation-play-state: running;
      }
    }
  }

  &:active {
    transform: translateY(-3px) scale(1.05);
    animation: lampRubAnimation 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &.chatOpen {
    animation: lampRubbed 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &.rubbing {
    animation: lampRubAnimation 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

// Smoothened magical lamp appearance
@keyframes magicalAppearance {
  0% {
    opacity: 0;
    transform: translateY(-40vh) scale(0.1) rotate(180deg);
    filter: blur(10px) brightness(2);
  }
  40% {
    opacity: 0.7;
    transform: translateY(-10px) scale(0.9) rotate(10deg);
    filter: blur(4px) brightness(1.5);
  }
  70% {
    opacity: 0.95;
    transform: translateY(-5px) scale(1.05) rotate(-5deg);
    filter: blur(1px) brightness(1.2);
  }
  90% {
    transform: translateY(2px) scale(0.98) rotate(2deg);
    filter: blur(0px) brightness(1.05);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1) rotate(0deg);
    filter: blur(0px) brightness(1);
  }
}

// Smoothened floating effect for idle state
@keyframes floatingEffect {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-4px) rotate(0deg);
  }
}



// Smoothened lamp rubbing animation
@keyframes lampRubAnimation {
  0%, 100% { 
    transform: rotate(0deg) scale(1);
    filter: brightness(1) saturate(1);
  }
  25% { 
    transform: rotate(-4deg) scale(1.02);
    filter: brightness(1.1) saturate(1.1);
  }
  50% { 
    transform: rotate(6deg) scale(1.05);
    filter: brightness(1.2) saturate(1.2);
  }
  75% { 
    transform: rotate(-3deg) scale(1.02);
    filter: brightness(1.1) saturate(1.1);
  }
}

// Smoothened lamp rubbed - magical effect
@keyframes lampRubbed {
  0% { 
    transform: scale(1);
    filter: brightness(1) saturate(1);
  }
  30% { 
    transform: scale(1.08);
    filter: brightness(1.3) saturate(1.3);
  }
  60% { 
    transform: scale(1.05);
    filter: brightness(1.2) saturate(1.2);
  }
  100% { 
    transform: scale(1);
    filter: brightness(1.1) saturate(1.1);
  }
}

.lampContainer {
  position: relative;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.lampSvg {
  width: 100%;
  height: 100%;
  filter: drop-shadow(0 4px 12px rgba(139, 69, 19, 0.4));
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform: scaleX(-1); // Horizontally flip the lamp
  
  &:hover {
    filter: drop-shadow(0 6px 16px rgba(139, 69, 19, 0.6)) 
            drop-shadow(0 0 20px rgba(255, 215, 0, 0.4));
    transform: scaleX(-1) scale(1.05);
  }
}

.lampImageSmall {
  width: 24px;
  height: 24px;
  filter: drop-shadow(0 2px 6px rgba(139, 69, 19, 0.3));
  transform: scaleX(-1); // Horizontally flip the small lamp too
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.sparklesOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  animation-play-state: paused;
}

.sparkle {
  position: absolute;
  font-size: 12px;
  opacity: 0.8;
  animation: sparkleFloat 3s ease-in-out infinite;
  animation-play-state: paused;
  
  &:nth-child(1) {
    animation-delay: 0s;
  }
  
  &:nth-child(2) {
    animation-delay: 0.5s;
  }
  
  &:nth-child(3) {
    animation-delay: 1s;
  }
  
  &:nth-child(4) {
    animation-delay: 1.5s;
  }
}

@keyframes sparkleFloat {
  0%, 100% {
    transform: translateY(0px) rotate(0deg) scale(1);
    opacity: 0.6;
  }
  25% {
    transform: translateY(-3px) rotate(90deg) scale(1.1);
    opacity: 1;
  }
  50% {
    transform: translateY(-6px) rotate(180deg) scale(0.9);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-3px) rotate(270deg) scale(1.05);
    opacity: 1;
  }
}

.smoke {
  position: absolute;
  width: 6px;
  height: 20px;
  background: linear-gradient(to top, 
    rgba(230, 230, 250, 0.8) 0%,
    rgba(230, 230, 250, 0.6) 30%,
    rgba(230, 230, 250, 0.4) 60%,
    rgba(230, 230, 250, 0.2) 80%,
    transparent 100%);
  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
  top: -25px;
  left: 50%;
  transform: translateX(-50%);
  animation: smokeRise 4s ease-in-out infinite;
  animation-play-state: paused;
  
  &:nth-child(1) {
    left: 45%;
    animation-delay: 0s;
  }
  
  &:nth-child(2) {
    left: 50%;
    animation-delay: 1s;
    opacity: 0.7;
  }
  
  &:nth-child(3) {
    left: 55%;
    animation-delay: 2s;
    opacity: 0.5;
  }
}

@keyframes smokeRise {
  0% {
    transform: translateX(-50%) translateY(0px) scale(0.8);
    opacity: 0;
  }
  20% {
    opacity: 1;
    transform: translateX(-50%) translateY(-5px) scale(1);
  }
  50% {
    transform: translateX(-50%) translateY(-15px) scale(1.2);
    opacity: 0.8;
  }
  80% {
    transform: translateX(-50%) translateY(-25px) scale(1.4);
    opacity: 0.4;
  }
  100% {
    transform: translateX(-50%) translateY(-35px) scale(1.6);
    opacity: 0;
  }
}

.avatar {
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.3));
  transition: all 0.3s ease;

  svg {
    transition: transform 0.2s ease;
  }

  &:hover svg {
    transform: scale(1.05) rotate(2deg);
  }
}

.avatarSmall {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 10px;
  color: #DAA520;

  svg {
    filter: drop-shadow(0 1px 3px rgba(0, 0, 0, 0.3));
  }
}

.chatWindow {
  position: absolute;
  bottom: 100px;
  right: 0;
  width: 400px;
  height: 520px;
  background: linear-gradient(145deg, #ffffff, #f8f9fa, #f0f8ff);
  border-radius: 20px;
  box-shadow: 
    0 25px 80px rgba(0, 0, 0, 0.2),
    0 0 40px rgba(218, 165, 32, 0.15),
    inset 0 1px 3px rgba(255, 255, 255, 0.8);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  transform-origin: bottom right;
  border: 2px solid rgba(218, 165, 32, 0.2);
  
  // Smoothened emergence animation
  animation: genieEmergence 0.6s cubic-bezier(0.4, 0, 0.2, 1);

  &.emerging {
    animation: genieEmergenceEnhanced 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  @media (max-width: 480px) {
    width: 340px;
    height: 470px;
    bottom: 90px;
    right: -10px;
  }
}

// Smoothened genie emergence from lamp
@keyframes genieEmergence {
  0% {
    opacity: 0;
    transform: scale(0.1) translateY(20px) rotate(-10deg);
    filter: blur(8px) brightness(1.5);
  }
  30% {
    opacity: 0.6;
    transform: scale(0.6) translateY(-8px) rotate(5deg);
    filter: blur(4px) brightness(1.3);
  }
  60% {
    opacity: 0.9;
    transform: scale(1.05) translateY(-4px) rotate(-2deg);
    filter: blur(1px) brightness(1.1);
  }
  80% {
    transform: scale(0.98) translateY(-1px) rotate(1deg);
    filter: blur(0px) brightness(1.05);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0) rotate(0deg);
    filter: blur(0px) brightness(1);
  }
}

// Smoothened enhanced genie emergence with magical effects
@keyframes genieEmergenceEnhanced {
  0% {
    opacity: 0;
    transform: scale(0.05) translateY(30px) rotate(-20deg);
    filter: blur(12px) saturate(2) brightness(2);
  }
  25% {
    opacity: 0.5;
    transform: scale(0.4) translateY(-10px) rotate(10deg);
    filter: blur(8px) saturate(1.8) brightness(1.8);
  }
  50% {
    opacity: 0.8;
    transform: scale(0.8) translateY(-6px) rotate(-5deg);
    filter: blur(4px) saturate(1.5) brightness(1.4);
  }
  75% {
    opacity: 0.95;
    transform: scale(1.08) translateY(-3px) rotate(3deg);
    filter: blur(1px) saturate(1.2) brightness(1.2);
  }
  90% {
    transform: scale(0.96) translateY(-1px) rotate(-1deg);
    filter: blur(0px) saturate(1.1) brightness(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0) rotate(0deg);
    filter: blur(0px) saturate(1) brightness(1);
  }
}

.chatHeader {
  background: linear-gradient(135deg, #DAA520, #B8860B, #CD853F);
  color: white;
  padding: 16px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 16px 16px 0 0;
  box-shadow: inset 0 2px 10px rgba(255, 215, 0, 0.3);
}

.chatTitle {
  display: flex;
  align-items: center;
  font-weight: 600;
  font-size: 16px;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.closeButton {
  background: none;
  border: none;
  color: white;
  font-size: 18px;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
  }

  &:active {
    background-color: rgba(255, 255, 255, 0.3);
    transform: scale(0.95);
  }
}

.chatBody {
  flex: 1;
  overflow: hidden;
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 20px;
    background: linear-gradient(to bottom, rgba(218, 165, 32, 0.1), transparent);
    pointer-events: none;
    z-index: 1;
  }
}

.chatIframe {
  width: 100%;
  height: 100%;
  border: none;
  background: white;
}

// Legacy styles cleanup - keeping for compatibility if needed
.chatbotCopilotIframe {
  overflow: hidden;
  padding: 1em;
  color: "[theme:bodyText, default: #323130]";
  color: var(--bodyText);
  
  &.teams {
    font-family: $ms-font-family-fallbacks;
  }
}

.welcome {
  text-align: center;
}

.welcomeImage {
  width: 100%;
  max-width: 420px;
}

.links {
  a {
    text-decoration: none;
    color: "[theme:link, default:#03787c]";
    color: var(--link);

    &:hover {
      text-decoration: underline;
      color: "[theme:linkHovered, default: #014446]";
      color: var(--linkHovered);
    }
  }
}